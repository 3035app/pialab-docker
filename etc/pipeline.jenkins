pipeline {
    agent any

    parameters {
        string(defaultValue: 'pialab', description: '', name: 'GlobalName')

        string(defaultValue: 'http://ci.libre-informatique.fr:8042/front', description: '', name: 'FrontUrl')
        string(defaultValue: 'http://ci.libre-informatique.fr:8042/back', description: '', name: 'BackUrl')

        string(defaultValue: '/usr/share/pialab/dist', description: '', name: 'FrontDirectory')
        string(defaultValue: '/usr/share/pialab-back/public', description: '', name: 'BackDirectory')

        string(defaultValue: '/etc/ssl/pialab.crt', description: '', name: 'FrontSSLCertificateFile')
        string(defaultValue: '/etc/ssl/pialab.key', description: '', name: 'FrontSSLCertificateKeyFile')
        string(defaultValue: '/etc/ssl/pialab.pem', description: '', name: 'FrontSSLCertificateChainFile')

        string(defaultValue: '/etc/ssl/pialab.crt', description: '', name: 'BackSSLCertificateFile')
        string(defaultValue: '/etc/ssl/pialab.key', description: '', name: 'BackSSLCertificateKeyFile')
        string(defaultValue: '/etc/ssl/pialab.pem', description: '', name: 'BackSSLCertificateChainFile')

        string(defaultValue: 'pialab_db', description: '', name: 'DatabaseName')
        string(defaultValue: 'pialab_user', description: '', name: 'DatabaseUser')
        string(defaultValue: 'pialab_password', description: '', name: 'DatabasePassword')

        string(defaultValue: 'master', description: '', name: 'FrontGitBranch')
        string(defaultValue: 'master', description: '', name: 'BackGitBranch')



    }

    environment {
        FRONTURL="${param.FrontUrl}"
        BACKURL="${param.BackUrl}"
    }

    options {
        timeout(time: 1, unit: 'HOURS')
        timestamps()
        disableConcurrentBuilds()
        ansiColor('xterm')
    }

    stages {
    	stage ('Where Am I') {
            steps {
                sh "uname -a"
            }
        }

        stage ('Install') {
            steps {
                sh "./install.sh"
            }
        }
    }


    post {
        always {
            cleanWs()
        }
    }

}
